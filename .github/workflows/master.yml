name: master

on:
  push:
    branches:
      - master

jobs:
  download-cross-workflow-artifact:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Display master info
        run: |
          # "Merge commit" (in this case) means the commit on master when it get merged
          echo "Previous commit on master - ${{ github.event.before }}"
          echo "Merge commit - ${{ github.event.after }}"
          echo "Merge commit - ${{ github.sha }}"
          echo "Merge commit - $GITHUB_SHA"
          echo "Repo - $GITHUB_REPOSITORY"
      # Since we can't retrieve pr number/ pr branch via Github context object on `push` event,
      # we have to use the commit above to get associate pr info first,
      # then use the pr number/ pr branch in the info to download artifact.
      - name: Get PR info
        id: get_pr_info
        uses: actions/github-script@v4
        with:
          script: |
            const path = require('path');
            const scriptPath = path.resolve('./.github/workflows/dependabot-comments/utils.js');
            const { getPrInfo } = require(scriptPath);

            // access `$GITHUB_SHA` in runner scope === access `process.env.GITHUB_SHA` in the github-script
            const commitHash = process.env.GITHUB_SHA;
            const prInfo = await getPrInfo(github, context, core, commitHash);
            console.log("pr info", prInfo);
            core.setOutput("prNumber", prInfo.number);
      - name: Display PR info
        run: |
          echo "PR outputs - ${{ steps.get_pr_info.outputs }}"
          echo "PR number - ${{ steps.get_pr_info.outputs.prNumber }}"
      - name: Download artifact once PR merged
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: pr.yml
          name: first-data-arctifact
          pr: ${{ steps.get_pr_info.outputs.prNumber }}
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: .
      - name: Collect data
        id: collect_data
        run: echo "::set-output name=downloadedData::$(node ./.github/workflows/download-cross-workflow-artifact.js)"
      - name: Post results to Log console
        run: echo "The downloaded ramdom number is ${{ steps.collect_data.outputs.downloadedData }}"
  log-workflow-run-list:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Display master info
        run: |
          echo "Event - ${{ github.event }}"
          echo "Event ref - ${{ github.event.base_ref }}"
          echo "Push event - ${{ github.event.push }}"
          echo "Push status - ${{ github.event.push.status }}"
          echo "Push conclusion - ${{ github.event.push.conclusion }}"
          echo "Workflow status - ${{ github.event.workflow_run.status }}"
          echo "Workflow status - ${{ github.event.workflow_run.status }}"
      - name: Get PR info
        id: get_pr_info
        uses: actions/github-script@v4
        with:
          script: |
            const path = require('path');
            const scriptPath = path.resolve('./.github/workflows/dependabot-comments/utils.js');
            const { getPrInfo } = require(scriptPath);
            const commitHash = process.env.GITHUB_SHA;
            const prInfo = await getPrInfo(github, context, core, commitHash);
            console.log("pr info", prInfo);
            console.log("pr branch", prInfo.head.ref);
            core.setOutput("prBranch", prInfo.head.ref);
      - name: calling API
        uses: actions/github-script@v4
        # Option 1: pass prBranch as an env variable
        env:
          PR_BRANCH: '${{ steps.get_pr_info.outputs.prBranch }}'
        with:
          script: |
            const path = require('path');
            const scriptPath = path.resolve('./.github/workflows/list-workflow-runs/index.js');
            // Option 2: pass prBranch as a constant
            const prBranch = '${{ steps.get_pr_info.outputs.prBranch }}';
            console.log('prBranch', prBranch);
            await require(scriptPath)(github, context, core, "pr.yml");

